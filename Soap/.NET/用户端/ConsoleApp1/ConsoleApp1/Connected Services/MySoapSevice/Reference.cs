//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//
//     对此文件的更改可能导致不正确的行为，并在以下条件下丢失:
//     代码重新生成。
// </auto-generated>
//------------------------------------------------------------------------------

namespace MySoapSevice
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://localhost:5231", ConfigurationName="MySoapSevice.IMySoapService")]
    public interface IMySoapService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost:5231/IMySoapService/GetGreeting", ReplyAction="http://localhost:5231/IMySoapService/GetGreetingResponse")]
        string GetGreeting(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost:5231/IMySoapService/GetGreeting", ReplyAction="http://localhost:5231/IMySoapService/GetGreetingResponse")]
        System.Threading.Tasks.Task<string> GetGreetingAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost:5231/IMySoapService/AddNumbers", ReplyAction="http://localhost:5231/IMySoapService/AddNumbersResponse")]
        int AddNumbers(int a, int b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost:5231/IMySoapService/AddNumbers", ReplyAction="http://localhost:5231/IMySoapService/AddNumbersResponse")]
        System.Threading.Tasks.Task<int> AddNumbersAsync(int a, int b);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public interface IMySoapServiceChannel : MySoapSevice.IMySoapService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public partial class MySoapServiceClient : System.ServiceModel.ClientBase<MySoapSevice.IMySoapService>, MySoapSevice.IMySoapService
    {
        
        /// <summary>
        /// 实现此分部方法，配置服务终结点。
        /// </summary>
        /// <param name="serviceEndpoint">要配置的终结点</param>
        /// <param name="clientCredentials">客户端凭据</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public MySoapServiceClient() : 
                base(MySoapServiceClient.GetDefaultBinding(), MySoapServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IMySoapService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MySoapServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(MySoapServiceClient.GetBindingForEndpoint(endpointConfiguration), MySoapServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MySoapServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(MySoapServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MySoapServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(MySoapServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MySoapServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public string GetGreeting(string name)
        {
            return base.Channel.GetGreeting(name);
        }
        
        public System.Threading.Tasks.Task<string> GetGreetingAsync(string name)
        {
            return base.Channel.GetGreetingAsync(name);
        }
        
        public int AddNumbers(int a, int b)
        {
            return base.Channel.AddNumbers(a, b);
        }
        
        public System.Threading.Tasks.Task<int> AddNumbersAsync(int a, int b)
        {
            return base.Channel.AddNumbersAsync(a, b);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IMySoapService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("找不到名称为“{0}”的终结点。", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IMySoapService))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:5231/MySoapService.asmx");
            }
            throw new System.InvalidOperationException(string.Format("找不到名称为“{0}”的终结点。", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return MySoapServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IMySoapService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return MySoapServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IMySoapService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IMySoapService,
        }
    }
}
